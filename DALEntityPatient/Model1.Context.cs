//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DALEntityPatient
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using SqlProviderServices = System.Data.Entity.SqlServer.SqlProviderServices;
    public partial class MedAssistV2Entities : DbContext
    {
        public MedAssistV2Entities()
            : base(ConnectionStringPatient.GetEFConnectionString())
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<selectPatientById_Result> selectPatientById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPatientById_Result>("selectPatientById", idParameter);
        }
    
        public virtual ObjectResult<selectAllMaison_Result> selectAllMaison()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAllMaison_Result>("selectAllMaison");
        }
    
        public virtual ObjectResult<selectSpecialiteMedecinByDate_Result> selectSpecialiteMedecinByDate(Nullable<System.DateTime> date, Nullable<int> idMaison)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("IdMaison", idMaison) :
                new ObjectParameter("IdMaison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectSpecialiteMedecinByDate_Result>("selectSpecialiteMedecinByDate", dateParameter, idMaisonParameter);
        }
    
        public virtual ObjectResult<selectSpecialiteByDate_Result> selectSpecialiteByDate(Nullable<System.DateTime> date, Nullable<int> idMaison)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("IdMaison", idMaison) :
                new ObjectParameter("IdMaison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectSpecialiteByDate_Result>("selectSpecialiteByDate", dateParameter, idMaisonParameter);
        }
    
        public virtual ObjectResult<selectHeureConsulation_Result> selectHeureConsulation(Nullable<System.DateTime> date, Nullable<int> idS, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idSParameter = idS.HasValue ?
                new ObjectParameter("IdS", idS) :
                new ObjectParameter("IdS", typeof(int));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHeureConsulation_Result>("selectHeureConsulation", dateParameter, idSParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectHeureConsultationCons_Result> selectHeureConsultationCons(Nullable<System.DateTime> date, Nullable<int> idS, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idSParameter = idS.HasValue ?
                new ObjectParameter("IdS", idS) :
                new ObjectParameter("IdS", typeof(int));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHeureConsultationCons_Result>("selectHeureConsultationCons", dateParameter, idSParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectHeureConsultationPlan_Result> selectHeureConsultationPlan(Nullable<System.DateTime> date, Nullable<int> idMe, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMeParameter = idMe.HasValue ?
                new ObjectParameter("IdMe", idMe) :
                new ObjectParameter("IdMe", typeof(int));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHeureConsultationPlan_Result>("selectHeureConsultationPlan", dateParameter, idMeParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectMedecinCon_Result> selectMedecinCon(Nullable<System.DateTime> date, Nullable<int> idM, Nullable<int> idS)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            var idSParameter = idS.HasValue ?
                new ObjectParameter("IdS", idS) :
                new ObjectParameter("IdS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectMedecinCon_Result>("selectMedecinCon", dateParameter, idMParameter, idSParameter);
        }
    
        public virtual ObjectResult<selectMedecinPlan_Result> selectMedecinPlan(Nullable<System.DateTime> date, Nullable<int> idM, Nullable<int> idS)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            var idSParameter = idS.HasValue ?
                new ObjectParameter("IdS", idS) :
                new ObjectParameter("IdS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectMedecinPlan_Result>("selectMedecinPlan", dateParameter, idMParameter, idSParameter);
        }
    
        public virtual int AddRDVMode1(Nullable<int> idPatient, Nullable<int> idMedecin, Nullable<int> idMaison, Nullable<int> idSpecialite, Nullable<System.DateTime> date, Nullable<System.TimeSpan> heure)
        {
            var idPatientParameter = idPatient.HasValue ?
                new ObjectParameter("IdPatient", idPatient) :
                new ObjectParameter("IdPatient", typeof(int));
    
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("IdMedecin", idMedecin) :
                new ObjectParameter("IdMedecin", typeof(int));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("IdMaison", idMaison) :
                new ObjectParameter("IdMaison", typeof(int));
    
            var idSpecialiteParameter = idSpecialite.HasValue ?
                new ObjectParameter("IdSpecialite", idSpecialite) :
                new ObjectParameter("IdSpecialite", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var heureParameter = heure.HasValue ?
                new ObjectParameter("heure", heure) :
                new ObjectParameter("heure", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRDVMode1", idPatientParameter, idMedecinParameter, idMaisonParameter, idSpecialiteParameter, dateParameter, heureParameter);
        }
    
        public virtual ObjectResult<selectRDVPatientByPaHeDa_Result> selectRDVPatientByPaHeDa(Nullable<int> idPatient, Nullable<System.DateTime> date, Nullable<System.TimeSpan> heure)
        {
            var idPatientParameter = idPatient.HasValue ?
                new ObjectParameter("idPatient", idPatient) :
                new ObjectParameter("idPatient", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var heureParameter = heure.HasValue ?
                new ObjectParameter("heure", heure) :
                new ObjectParameter("heure", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectRDVPatientByPaHeDa_Result>("selectRDVPatientByPaHeDa", idPatientParameter, dateParameter, heureParameter);
        }
    
        public virtual ObjectResult<selectHeureConsultationConsAp_Result> selectHeureConsultationConsAp(Nullable<System.DateTime> date, Nullable<int> idMe, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMeParameter = idMe.HasValue ?
                new ObjectParameter("IdMe", idMe) :
                new ObjectParameter("IdMe", typeof(int));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHeureConsultationConsAp_Result>("selectHeureConsultationConsAp", dateParameter, idMeParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectHeureConsultationConsMat_Result> selectHeureConsultationConsMat(Nullable<System.DateTime> date, Nullable<int> idMe, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMeParameter = idMe.HasValue ?
                new ObjectParameter("IdMe", idMe) :
                new ObjectParameter("IdMe", typeof(int));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectHeureConsultationConsMat_Result>("selectHeureConsultationConsMat", dateParameter, idMeParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectMedecinByDateMaison_Result> selectMedecinByDateMaison(Nullable<System.DateTime> date, Nullable<int> idM)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idMParameter = idM.HasValue ?
                new ObjectParameter("IdM", idM) :
                new ObjectParameter("IdM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectMedecinByDateMaison_Result>("selectMedecinByDateMaison", dateParameter, idMParameter);
        }
    
        public virtual ObjectResult<selectPatientRDV_Result> selectPatientRDV(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPatientRDV_Result>("selectPatientRDV", idParameter);
        }
    
        public virtual int UpdateRDVMode1(Nullable<System.TimeSpan> anHeure, Nullable<int> idPlanninRDV, Nullable<int> idConsultation, Nullable<int> idMedecin, Nullable<int> idMaison, Nullable<int> idSpecialite, Nullable<System.DateTime> date, Nullable<System.TimeSpan> heure)
        {
            var anHeureParameter = anHeure.HasValue ?
                new ObjectParameter("anHeure", anHeure) :
                new ObjectParameter("anHeure", typeof(System.TimeSpan));
    
            var idPlanninRDVParameter = idPlanninRDV.HasValue ?
                new ObjectParameter("idPlanninRDV", idPlanninRDV) :
                new ObjectParameter("idPlanninRDV", typeof(int));
    
            var idConsultationParameter = idConsultation.HasValue ?
                new ObjectParameter("idConsultation", idConsultation) :
                new ObjectParameter("idConsultation", typeof(int));
    
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("IdMedecin", idMedecin) :
                new ObjectParameter("IdMedecin", typeof(int));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("IdMaison", idMaison) :
                new ObjectParameter("IdMaison", typeof(int));
    
            var idSpecialiteParameter = idSpecialite.HasValue ?
                new ObjectParameter("IdSpecialite", idSpecialite) :
                new ObjectParameter("IdSpecialite", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var heureParameter = heure.HasValue ?
                new ObjectParameter("heure", heure) :
                new ObjectParameter("heure", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRDVMode1", anHeureParameter, idPlanninRDVParameter, idConsultationParameter, idMedecinParameter, idMaisonParameter, idSpecialiteParameter, dateParameter, heureParameter);
        }
    
        public virtual int DeleteRDVMode1(Nullable<System.TimeSpan> anHeure, Nullable<int> idPlanninRDV, Nullable<int> idConsultation, Nullable<System.DateTime> date, Nullable<int> idLocal)
        {
            var anHeureParameter = anHeure.HasValue ?
                new ObjectParameter("anHeure", anHeure) :
                new ObjectParameter("anHeure", typeof(System.TimeSpan));
    
            var idPlanninRDVParameter = idPlanninRDV.HasValue ?
                new ObjectParameter("idPlanninRDV", idPlanninRDV) :
                new ObjectParameter("idPlanninRDV", typeof(int));
    
            var idConsultationParameter = idConsultation.HasValue ?
                new ObjectParameter("idConsultation", idConsultation) :
                new ObjectParameter("idConsultation", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var idLocalParameter = idLocal.HasValue ?
                new ObjectParameter("idLocal", idLocal) :
                new ObjectParameter("idLocal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRDVMode1", anHeureParameter, idPlanninRDVParameter, idConsultationParameter, dateParameter, idLocalParameter);
        }
    
        public virtual ObjectResult<selectAllMedecin_Result> selectAllMedecin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectAllMedecin_Result>("selectAllMedecin");
        }
    
        public virtual ObjectResult<selectMaisonByMedecin_Result> selectMaisonByMedecin(Nullable<int> idMedecin)
        {
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("idMedecin", idMedecin) :
                new ObjectParameter("idMedecin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectMaisonByMedecin_Result>("selectMaisonByMedecin", idMedecinParameter);
        }
    
        public virtual ObjectResult<selectSpecialiteByMaisonMedecin_Result> selectSpecialiteByMaisonMedecin(Nullable<int> idMedecin, Nullable<int> idMaison)
        {
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("idMedecin", idMedecin) :
                new ObjectParameter("idMedecin", typeof(int));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("idMaison", idMaison) :
                new ObjectParameter("idMaison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectSpecialiteByMaisonMedecin_Result>("selectSpecialiteByMaisonMedecin", idMedecinParameter, idMaisonParameter);
        }
    
        public virtual ObjectResult<selectDatePresence_Result> selectDatePresence(Nullable<int> idMedecin, Nullable<int> idMaison)
        {
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("idMedecin", idMedecin) :
                new ObjectParameter("idMedecin", typeof(int));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("idMaison", idMaison) :
                new ObjectParameter("idMaison", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectDatePresence_Result>("selectDatePresence", idMedecinParameter, idMaisonParameter);
        }
    
        public virtual int UpdateRDVMode2(Nullable<System.TimeSpan> anHeure, Nullable<int> idPlanninRDV, Nullable<int> idConsultation, Nullable<int> idMedecin, Nullable<int> idMaison, Nullable<int> idSpecialite, Nullable<System.DateTime> date, Nullable<System.TimeSpan> heure, Nullable<int> idPlanningMed)
        {
            var anHeureParameter = anHeure.HasValue ?
                new ObjectParameter("anHeure", anHeure) :
                new ObjectParameter("anHeure", typeof(System.TimeSpan));
    
            var idPlanninRDVParameter = idPlanninRDV.HasValue ?
                new ObjectParameter("idPlanninRDV", idPlanninRDV) :
                new ObjectParameter("idPlanninRDV", typeof(int));
    
            var idConsultationParameter = idConsultation.HasValue ?
                new ObjectParameter("idConsultation", idConsultation) :
                new ObjectParameter("idConsultation", typeof(int));
    
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("IdMedecin", idMedecin) :
                new ObjectParameter("IdMedecin", typeof(int));
    
            var idMaisonParameter = idMaison.HasValue ?
                new ObjectParameter("IdMaison", idMaison) :
                new ObjectParameter("IdMaison", typeof(int));
    
            var idSpecialiteParameter = idSpecialite.HasValue ?
                new ObjectParameter("IdSpecialite", idSpecialite) :
                new ObjectParameter("IdSpecialite", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var heureParameter = heure.HasValue ?
                new ObjectParameter("heure", heure) :
                new ObjectParameter("heure", typeof(System.TimeSpan));
    
            var idPlanningMedParameter = idPlanningMed.HasValue ?
                new ObjectParameter("idPlanningMed", idPlanningMed) :
                new ObjectParameter("idPlanningMed", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRDVMode2", anHeureParameter, idPlanninRDVParameter, idConsultationParameter, idMedecinParameter, idMaisonParameter, idSpecialiteParameter, dateParameter, heureParameter, idPlanningMedParameter);
        }
    
        public virtual ObjectResult<selectPatientRDVAndDate_Result> selectPatientRDVAndDate(Nullable<int> id, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<selectPatientRDVAndDate_Result>("selectPatientRDVAndDate", idParameter, dateParameter);
        }
    
        public virtual int AddRDVConfirmation(Nullable<int> idRDV, Nullable<int> idMedecin)
        {
            var idRDVParameter = idRDV.HasValue ?
                new ObjectParameter("idRDV", idRDV) :
                new ObjectParameter("idRDV", typeof(int));
    
            var idMedecinParameter = idMedecin.HasValue ?
                new ObjectParameter("idMedecin", idMedecin) :
                new ObjectParameter("idMedecin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRDVConfirmation", idRDVParameter, idMedecinParameter);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DalEntity
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedAssistEntities : DbContext
    {
        public MedAssistEntities()
            : base("name=MedAssistEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Consultation> Consultation { get; set; }
        public virtual DbSet<DispoLocal> DispoLocal { get; set; }
        public virtual DbSet<Locaux> Locaux { get; set; }
        public virtual DbSet<MaisonMedical> MaisonMedical { get; set; }
        public virtual DbSet<Medecin> Medecin { get; set; }
        public virtual DbSet<MEDSpecialite> MEDSpecialite { get; set; }
        public virtual DbSet<Patient> Patient { get; set; }
        public virtual DbSet<PlanningMED> PlanningMED { get; set; }
        public virtual DbSet<PlanningRDV> PlanningRDV { get; set; }
        public virtual DbSet<RDVConfirme> RDVConfirme { get; set; }
        public virtual DbSet<RendezVous> RendezVous { get; set; }
    
        public virtual int AddMaisonMedicale(string nom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("Nom", nom) :
                new ObjectParameter("Nom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMaisonMedicale", nomParameter);
        }
    
        public virtual int AddMedecin(string nom, string prenom)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("Nom", nom) :
                new ObjectParameter("Nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("Prenom", prenom) :
                new ObjectParameter("Prenom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMedecin", nomParameter, prenomParameter);
        }
    
        public virtual ObjectResult<ReturnTime_Result> ReturnTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReturnTime_Result>("ReturnTime");
        }
    
        public virtual ObjectResult<SelectAllMaisonMedicale_Result> SelectAllMaisonMedicale()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMaisonMedicale_Result>("SelectAllMaisonMedicale");
        }
    
        public virtual ObjectResult<SelectAllMaisonMedicaleLocal_Result> SelectAllMaisonMedicaleLocal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMaisonMedicaleLocal_Result>("SelectAllMaisonMedicaleLocal");
        }
    
        public virtual ObjectResult<SelectAllMedecin_Result> SelectAllMedecin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMedecin_Result>("SelectAllMedecin");
        }
    
        public virtual ObjectResult<SelectAllMedecinSpecialite_Result> SelectAllMedecinSpecialite()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllMedecinSpecialite_Result>("SelectAllMedecinSpecialite");
        }
    
        public virtual ObjectResult<SelectAllPlanning_Result> SelectAllPlanning()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllPlanning_Result>("SelectAllPlanning");
        }
    
        public virtual ObjectResult<string> SelectAllspecialite()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SelectAllspecialite");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> SelectDateBySpecilaite(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("SelectDateBySpecilaite", idParameter);
        }
    
        public virtual ObjectResult<SelectHeureConsultationByDate_Result> SelectHeureConsultationByDate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectHeureConsultationByDate_Result>("SelectHeureConsultationByDate", idParameter);
        }
    
        public virtual ObjectResult<SelectPlanningMedecinById_Result> SelectPlanningMedecinById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectPlanningMedecinById_Result>("SelectPlanningMedecinById", idParameter);
        }
    }
}
